// This file was autogenerated by some hot garbage in the `uniffi` crate.
// Trust me, you don't want to mess with it!

#pragma once

#include <stdbool.h>
#include <stdint.h>

// The following structs are used to implement the lowest level
// of the FFI, and thus useful to multiple uniffied crates.
// We ensure they are declared exactly once, with a header guard, UNIFFI_SHARED_H.
#ifdef UNIFFI_SHARED_H
    // We also try to prevent mixing versions of shared uniffi header structs.
    // If you add anything to the #else block, you must increment the version suffix in UNIFFI_SHARED_HEADER_V4
    #ifndef UNIFFI_SHARED_HEADER_V4
        #error Combining helper code from multiple versions of uniffi is not supported
    #endif // ndef UNIFFI_SHARED_HEADER_V4
#else
#define UNIFFI_SHARED_H
#define UNIFFI_SHARED_HEADER_V4
// ⚠️ Attention: If you change this #else block (ending in `#endif // def UNIFFI_SHARED_H`) you *must* ⚠️
// ⚠️ increment the version suffix in all instances of UNIFFI_SHARED_HEADER_V4 in this file.           ⚠️

typedef struct RustBuffer
{
    int32_t capacity;
    int32_t len;
    uint8_t *_Nullable data;
} RustBuffer;

typedef int32_t (*ForeignCallback)(uint64_t, int32_t, RustBuffer, RustBuffer *_Nonnull);

typedef struct ForeignBytes
{
    int32_t len;
    const uint8_t *_Nullable data;
} ForeignBytes;

// Error definitions
typedef struct RustCallStatus {
    int8_t code;
    RustBuffer errorBuf;
} RustCallStatus;

// ⚠️ Attention: If you change this #else block (ending in `#endif // def UNIFFI_SHARED_H`) you *must* ⚠️
// ⚠️ increment the version suffix in all instances of UNIFFI_SHARED_HEADER_V4 in this file.           ⚠️
#endif // def UNIFFI_SHARED_H

void ffi_olm_c9b9_OlmMachine_object_free(
      void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
    );
void*_Nonnull olm_c9b9_OlmMachine_new(
      RustBuffer user_id,RustBuffer device_id,RustBuffer path,RustBuffer passphrase,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_identity_keys(
      void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_user_id(
      void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_device_id(
      void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_receive_sync_changes(
      void*_Nonnull ptr,RustBuffer events,RustBuffer device_changes,RustBuffer key_counts,RustBuffer unused_fallback_keys,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_outgoing_requests(
      void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
    );
void olm_c9b9_OlmMachine_mark_request_as_sent(
      void*_Nonnull ptr,RustBuffer request_id,RustBuffer request_type,RustBuffer response,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_decrypt_room_event(
      void*_Nonnull ptr,RustBuffer event,RustBuffer room_id,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_encrypt(
      void*_Nonnull ptr,RustBuffer room_id,RustBuffer event_type,RustBuffer content,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_get_identity(
      void*_Nonnull ptr,RustBuffer user_id,uint32_t timeout,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_verify_identity(
      void*_Nonnull ptr,RustBuffer user_id,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_get_device(
      void*_Nonnull ptr,RustBuffer user_id,RustBuffer device_id,uint32_t timeout,
    RustCallStatus *_Nonnull out_status
    );
void olm_c9b9_OlmMachine_mark_device_as_trusted(
      void*_Nonnull ptr,RustBuffer user_id,RustBuffer device_id,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_verify_device(
      void*_Nonnull ptr,RustBuffer user_id,RustBuffer device_id,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_get_user_devices(
      void*_Nonnull ptr,RustBuffer user_id,uint32_t timeout,
    RustCallStatus *_Nonnull out_status
    );
int8_t olm_c9b9_OlmMachine_is_user_tracked(
      void*_Nonnull ptr,RustBuffer user_id,
    RustCallStatus *_Nonnull out_status
    );
void olm_c9b9_OlmMachine_update_tracked_users(
      void*_Nonnull ptr,RustBuffer users,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_get_missing_sessions(
      void*_Nonnull ptr,RustBuffer users,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_share_room_key(
      void*_Nonnull ptr,RustBuffer room_id,RustBuffer users,
    RustCallStatus *_Nonnull out_status
    );
void olm_c9b9_OlmMachine_receive_unencrypted_verification_event(
      void*_Nonnull ptr,RustBuffer event,RustBuffer room_id,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_get_verification_requests(
      void*_Nonnull ptr,RustBuffer user_id,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_get_verification_request(
      void*_Nonnull ptr,RustBuffer user_id,RustBuffer flow_id,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_get_verification(
      void*_Nonnull ptr,RustBuffer user_id,RustBuffer flow_id,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_request_verification(
      void*_Nonnull ptr,RustBuffer user_id,RustBuffer room_id,RustBuffer event_id,RustBuffer methods,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_verification_request_content(
      void*_Nonnull ptr,RustBuffer user_id,RustBuffer methods,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_request_self_verification(
      void*_Nonnull ptr,RustBuffer methods,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_request_verification_with_device(
      void*_Nonnull ptr,RustBuffer user_id,RustBuffer device_id,RustBuffer methods,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_accept_verification_request(
      void*_Nonnull ptr,RustBuffer user_id,RustBuffer flow_id,RustBuffer methods,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_confirm_verification(
      void*_Nonnull ptr,RustBuffer user_id,RustBuffer flow_id,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_cancel_verification(
      void*_Nonnull ptr,RustBuffer user_id,RustBuffer flow_id,RustBuffer cancel_code,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_start_sas_with_device(
      void*_Nonnull ptr,RustBuffer user_id,RustBuffer device_id,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_start_sas_verification(
      void*_Nonnull ptr,RustBuffer user_id,RustBuffer flow_id,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_accept_sas_verification(
      void*_Nonnull ptr,RustBuffer user_id,RustBuffer flow_id,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_get_emoji_index(
      void*_Nonnull ptr,RustBuffer user_id,RustBuffer flow_id,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_get_decimals(
      void*_Nonnull ptr,RustBuffer user_id,RustBuffer flow_id,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_start_qr_verification(
      void*_Nonnull ptr,RustBuffer user_id,RustBuffer flow_id,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_scan_qr_code(
      void*_Nonnull ptr,RustBuffer user_id,RustBuffer flow_id,RustBuffer data,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_generate_qr_code(
      void*_Nonnull ptr,RustBuffer user_id,RustBuffer flow_id,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_request_room_key(
      void*_Nonnull ptr,RustBuffer event,RustBuffer room_id,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_export_keys(
      void*_Nonnull ptr,RustBuffer passphrase,int32_t rounds,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_import_keys(
      void*_Nonnull ptr,RustBuffer keys,RustBuffer passphrase,uint64_t progress_listener,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_import_decrypted_keys(
      void*_Nonnull ptr,RustBuffer keys,uint64_t progress_listener,
    RustCallStatus *_Nonnull out_status
    );
void olm_c9b9_OlmMachine_discard_room_key(
      void*_Nonnull ptr,RustBuffer room_id,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_cross_signing_status(
      void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_bootstrap_cross_signing(
      void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_export_cross_signing_keys(
      void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
    );
void olm_c9b9_OlmMachine_import_cross_signing_keys(
      void*_Nonnull ptr,RustBuffer export,
    RustCallStatus *_Nonnull out_status
    );
int8_t olm_c9b9_OlmMachine_is_identity_verified(
      void*_Nonnull ptr,RustBuffer user_id,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_sign(
      void*_Nonnull ptr,RustBuffer message,
    RustCallStatus *_Nonnull out_status
    );
void olm_c9b9_OlmMachine_enable_backup_v1(
      void*_Nonnull ptr,RustBuffer key,RustBuffer version,
    RustCallStatus *_Nonnull out_status
    );
void olm_c9b9_OlmMachine_disable_backup(
      void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_backup_room_keys(
      void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
    );
void olm_c9b9_OlmMachine_save_recovery_key(
      void*_Nonnull ptr,RustBuffer key,RustBuffer version,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_room_key_counts(
      void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_OlmMachine_get_backup_keys(
      void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
    );
int8_t olm_c9b9_OlmMachine_backup_enabled(
      void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
    );
int8_t olm_c9b9_OlmMachine_verify_backup(
      void*_Nonnull ptr,RustBuffer auth_data,
    RustCallStatus *_Nonnull out_status
    );
void ffi_olm_c9b9_BackupKeys_object_free(
      void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
    );
void*_Nonnull olm_c9b9_BackupKeys_recovery_key(
      void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_BackupKeys_backup_version(
      void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
    );
void ffi_olm_c9b9_BackupRecoveryKey_object_free(
      void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
    );
void*_Nonnull olm_c9b9_BackupRecoveryKey_new(
      
    RustCallStatus *_Nonnull out_status
    );
void*_Nonnull olm_c9b9_BackupRecoveryKey_from_passphrase(
      RustBuffer passphrase,RustBuffer salt,int32_t rounds,
    RustCallStatus *_Nonnull out_status
    );
void*_Nonnull olm_c9b9_BackupRecoveryKey_new_from_passphrase(
      RustBuffer passphrase,
    RustCallStatus *_Nonnull out_status
    );
void*_Nonnull olm_c9b9_BackupRecoveryKey_from_base64(
      RustBuffer key,
    RustCallStatus *_Nonnull out_status
    );
void*_Nonnull olm_c9b9_BackupRecoveryKey_from_base58(
      RustBuffer key,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_BackupRecoveryKey_to_base58(
      void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_BackupRecoveryKey_to_base64(
      void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_BackupRecoveryKey_megolm_v1_public_key(
      void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer olm_c9b9_BackupRecoveryKey_decrypt_v1(
      void*_Nonnull ptr,RustBuffer ephemeral_key,RustBuffer mac,RustBuffer ciphertext,
    RustCallStatus *_Nonnull out_status
    );
void ffi_olm_c9b9_Logger_init_callback(
      ForeignCallback  _Nonnull callback_stub,
    RustCallStatus *_Nonnull out_status
    );
void ffi_olm_c9b9_ProgressListener_init_callback(
      ForeignCallback  _Nonnull callback_stub,
    RustCallStatus *_Nonnull out_status
    );
void olm_c9b9_set_logger(
      uint64_t logger,
    RustCallStatus *_Nonnull out_status
    );
void olm_c9b9_migrate(
      RustBuffer data,RustBuffer path,RustBuffer passphrase,uint64_t progress_listener,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer ffi_olm_c9b9_rustbuffer_alloc(
      int32_t size,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer ffi_olm_c9b9_rustbuffer_from_bytes(
      ForeignBytes bytes,
    RustCallStatus *_Nonnull out_status
    );
void ffi_olm_c9b9_rustbuffer_free(
      RustBuffer buf,
    RustCallStatus *_Nonnull out_status
    );
RustBuffer ffi_olm_c9b9_rustbuffer_reserve(
      RustBuffer buf,int32_t additional,
    RustCallStatus *_Nonnull out_status
    );
